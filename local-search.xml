<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>jupytnote_book修改預設目錄</title>
    <link href="/2023/04/30/jupytnote-book%E4%BF%AE%E6%94%B9%E9%A0%90%E8%A8%AD%E7%9B%AE%E9%8C%84/"/>
    <url>/2023/04/30/jupytnote-book%E4%BF%AE%E6%94%B9%E9%A0%90%E8%A8%AD%E7%9B%AE%E9%8C%84/</url>
    
    <content type="html"><![CDATA[<p>jupyter notebook –generate-config</p><p>會產生一個config在C:\Users\user.jupyter\jupyter_notebook_config.py</p><p>jupyter_notebook_config.py後搜尋</p><p>#c.NotebookApp.notebook_dir &#x3D; u’’<br>變成<br>c.NotebookApp.notebook_dir &#x3D; u’’</p><p>然後在引號裡添加路徑例如</p><p>c.NotebookApp.notebook_dir &#x3D; u’D:&#x2F;&#x2F;Coding&#x2F;&#x2F;Jupyter_Notebook’</p><p>最後去jupytnote book路徑把”%USERPROFILE%&#x2F;“刪掉即可</p><p>參考資料</p><p><a href="https://jt25346798.medium.com/%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9Ajupyter-notebook%E7%9A%84%E8%B5%B7%E5%A7%8B%E8%B7%AF%E5%BE%91-8bf4d0468883">如何設定jupyter notebook的起始路徑 - 沒有如果，只有當下 - Medium</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tensorflowGPU版建置_cuda11_</title>
    <link href="/2023/04/30/tensorflowGPU%E7%89%88%E5%BB%BA%E7%BD%AE-cuda11/"/>
    <url>/2023/04/30/tensorflowGPU%E7%89%88%E5%BB%BA%E7%BD%AE-cuda11/</url>
    
    <content type="html"><![CDATA[<h2 id="如何跑TensorflowGPU版"><a href="#如何跑TensorflowGPU版" class="headerlink" title="如何跑TensorflowGPU版"></a>如何跑TensorflowGPU版</h2><p>老師給的environment是py3.6.9版有點太舊了，而且重點是沒法用GPU加速</p><p>首先自己用anaconda 2.1.4創建一個py&#x3D;3.7.16的環境<br>接著</p><p>conda install tensorflow-gpu&#x3D;2.5</p><p>pip install matplotlib</p><p>pip install jupyter notebook</p><p>同時再用anaconda安裝jupyter notebook及所有附屬套件</p><p>這時還沒結束，如果跑出500：Internal Server Error，要打</p><p>pip uninstall nbconvert</p><p>pip install nbconvert</p><p>pip install –upgrade nbconvert</p><p>謝天謝地終於可以用GPU而不是CPU跑了</p><p>參考</p><p><a href="https://medium.com/py-tips-conceptes/%E5%AE%89%E8%A3%9Dtensorflow-gpu-2-4%E7%89%88%E6%9C%AC-9d9fe6ff172f">安裝tensorflow-gpu 2.4版本 - py-tips-conceptes - Medium</a></p><p><a href="https://zhuanlan.zhihu.com/p/573536499">如何解决jupyter notebook 出现大大的500：Internal Server Error - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>blog建置_二_：</title>
    <link href="/2023/04/29/blog%E5%BB%BA%E7%BD%AE-%E4%BA%8C-%EF%BC%9A/"/>
    <url>/2023/04/29/blog%E5%BB%BA%E7%BD%AE-%E4%BA%8C-%EF%BC%9A/</url>
    
    <content type="html"><![CDATA[<p>個人化Next模板</p><p>這裡說的是不只next本來就預設好的tab，大部分要部分修改原始檔案</p><p>CNAME</p><p>source裡新增一個CNAME的檔案，不要有副檔名，裡面加入Custom domain的目標來避免每次hexo d之後github page的Custom domain消失</p><p>本文結束</p><p>隱藏部分文章不要出現在全部文章裡，例如紀錄、雜項</p><p>接下來要嘗試部屬image</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>神經網路學習(二)：嘗試只利用NN訓練CIFAR10來達到90%以上acc</title>
    <link href="/2023/04/29/%E7%A5%9E%E7%B6%93%E7%B6%B2%E8%B7%AF%E5%AD%B8%E7%BF%92-%E4%BA%8C-%EF%BC%9A/"/>
    <url>/2023/04/29/%E7%A5%9E%E7%B6%93%E7%B6%B2%E8%B7%AF%E5%AD%B8%E7%BF%92-%E4%BA%8C-%EF%BC%9A/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>用chatGPT作為資料集來訓練私人小型語言模型</title>
    <link href="/2023/04/29/%E7%94%A8chatGPT%E4%BD%9C%E7%82%BA%E8%B3%87%E6%96%99%E9%9B%86%E4%BE%86%E8%A8%93%E7%B7%B4%E7%A7%81%E4%BA%BA%E5%B0%8F%E5%9E%8B%E8%AA%9E%E8%A8%80%E6%A8%A1%E5%9E%8B/"/>
    <url>/2023/04/29/%E7%94%A8chatGPT%E4%BD%9C%E7%82%BA%E8%B3%87%E6%96%99%E9%9B%86%E4%BE%86%E8%A8%93%E7%B7%B4%E7%A7%81%E4%BA%BA%E5%B0%8F%E5%9E%8B%E8%AA%9E%E8%A8%80%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vscode遠端作業</title>
    <link href="/2023/04/29/vscode%E9%81%A0%E7%AB%AF%E4%BD%9C%E6%A5%AD/"/>
    <url>/2023/04/29/vscode%E9%81%A0%E7%AB%AF%E4%BD%9C%E6%A5%AD/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>log</title>
    <link href="/2023/04/28/log/"/>
    <url>/2023/04/28/log/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>品牌設計課紀錄(本網站icon設計)</title>
    <link href="/2023/04/28/%E5%93%81%E7%89%8C%E8%A8%AD%E8%A8%88%E8%AA%B2%E7%B4%80%E9%8C%84/"/>
    <url>/2023/04/28/%E5%93%81%E7%89%8C%E8%A8%AD%E8%A8%88%E8%AA%B2%E7%B4%80%E9%8C%84/</url>
    
    <content type="html"><![CDATA[<p>Ci,Bi,Mi<br>網站mark三個形容詞來形容：科技、專業、公開</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>神經網路學習(一)：簡介NN、CNN、DNN等基礎</title>
    <link href="/2023/04/26/NN%E5%AD%B8%E7%BF%92-%E4%B8%80/"/>
    <url>/2023/04/26/NN%E5%AD%B8%E7%BF%92-%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>今天上課開始講到NN部分，作為記錄試著開始寫我對於NN的學習歷程</p><h2 id="NN、DNN與CNN"><a href="#NN、DNN與CNN" class="headerlink" title="NN、DNN與CNN"></a>NN、DNN與CNN</h2><p>NN (Neural Network) ：僅描述最基礎及廣義的神經網路模型，全連接，後續所有神經網路都可以是廣義上的NN<br>DNN (Deep Neural Networks) ：專指深度超過2的NN模型<br>CNN (Convolutional neural network) ：較適合用在圖片識別，捲積層、池化層、全連接層<br>其中池化層負責縮小圖片維度，捲積層透過filter負責提取局部特徵，全連接層回到最初始NN的分類模型<br>RNN<br>GNN<br>Transformer</p><ol><li>卷積神經網絡（Convolutional Neural Networks，CNN）：<br>CNN是一種專為圖像識別設計的神經網絡模型，它使用卷積層、池化層和全連接層來實現對圖像數據的特徵提取和分類。卷積層用於捕捉局部特徵，池化層用於減少特徵維度，全連接層用於進行最終的分類。</li><li>遞歸神經網絡（Recurrent Neural Networks，RNN）：<br>RNN是一種處理序列數據（如時間序列、文本等）的神經網絡模型，它具有記憶功能，可以捕捉時間上的依賴關係。RNN的一個主要挑戰是梯度消失或梯度爆炸問題，因此在實作中經常使用長短時記憶（LSTM）或門控循環單元（GRU）等改進型結構。</li><li>生成對抗網絡（Generative Adversarial Networks，GAN）：<br>GAN是一種創新的生成模型，它由生成器（Generator）和判別器（Discriminator）兩部分組成。生成器負責生成假數據，判別器負責辨別真假數據。通過博弈過程，生成器逐步提高生成數據的質量，判別器逐步提高辨別能力。最終，生成器可以生成接近真實數據的假數據。</li><li>Transformer模型：<br>Transformer是一種基於自注意力機制（Self-Attention Mechanism）的深度學習模型，它在自然語言處理（NLP）等領域取得了顯著成果。Transformer克服了RNN無法充分捕捉長距離依賴的問題，並具有高度並行化的特點，能夠更有效地處理大規模數據。基於Transformer的預訓練語言模型（如BERT、GPT等）在各種自然語言處理任務上都取得了極高的性能。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一篇文章</title>
    <link href="/2023/04/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2023/04/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="開頭"><a href="#開頭" class="headerlink" title="開頭"></a>開頭</h2><p>這是創建部落格後的第一篇文章，就順便來記錄一下用了哪些工具</p><p>首先核心是用github提供的免費靜態網站功能來規避伺服器管理麻煩</p><p>接著用DNS跟Custom domain來讓ozrth.com指向bruce8866.github.io(或是反過來?其實我搞不太懂)</p><p>編輯及管理用hexo這套，然後掛next主題模板。用Typora跟VSCode掛Office Viewer來編輯Markdown</p><p>然後用git套件來部屬及預覽伺服器</p><p><code>$hexo g</code> 生成網站<br><code>$hexo s</code>部屬本機遇覽伺服器<br><code>$hexo clean</code>清除本機快取<br><code>$hexo d</code>部屬到github</p><h2 id="撰寫文章"><a href="#撰寫文章" class="headerlink" title="撰寫文章"></a>撰寫文章</h2><p>要撰寫文章的話要先使用 <code>$hexo new 名稱</code> 來創建文章，接著就可以編輯了</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料:"></a>參考資料:</h2><p><a href="https://ithelp.ithome.com.tw/articles/10272520">https://ithelp.ithome.com.tw/articles/10272520?</a></p><p><a href="https://medium.com/%E5%89%8D%E7%AB%AF%E5%AF%A6%E5%8A%9B%E4%B8%89%E6%98%8E%E6%B2%BB/%E5%80%8B%E4%BA%BA%E6%8A%80%E8%A1%93%E7%AB%99%E4%B8%80%E6%8A%8A%E7%BD%A9-%E9%83%A8%E8%90%BD%E6%A0%BC%E5%BB%BA%E7%BD%AE%E5%A4%A7%E5%85%A8-%E4%BA%8C-%E5%B0%87-github-page-%E4%B8%B2%E4%B8%8A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D-8f7e11cf2687">個人技術站一把罩！部落格建置大全（二）- 將 Github Page 串上自己的域名 | by Moojing | 網站實力三明治 | Medium</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/23/hello-world/"/>
    <url>/2023/04/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
